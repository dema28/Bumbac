name: 🚀 CI/CD Pipeline - Backend + QA

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  # ============================================
  # 📦 УСТАНОВКА ЗАВИСИМОСТЕЙ
  # ============================================
  install-backend:
    name: ☕ Install Backend Dependencies
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: 📦 Download Maven Dependencies (Backend)
        working-directory: ./backend
        run: mvn dependency:go-offline -q

  install-qa:
    name: 🧪 Install QA Dependencies  
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: 📦 Download Maven Dependencies (QA)
        working-directory: ./qa-automation
        run: mvn dependency:go-offline -q

  # ============================================
  # ☕ BACKEND TESTS - JAVA + MAVEN
  # ============================================
  backend-tests:
    name: ☕ Backend Tests (Java + Maven)
    needs: install-backend
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: 🗄️ Setup MySQL Test Database
        run: |
          sudo systemctl start mysql.service
          mysql -e 'CREATE DATABASE IF NOT EXISTS yarn_store_test;' -uroot -proot

      - name: 🧪 Run Backend Tests (TestNG)
        working-directory: ./backend
        run: mvn test -Dspring.profiles.active=test
        env:
          DB_HOST: localhost
          DB_PORT: 3306
          DB_NAME: yarn_store_test
          DB_USERNAME: root
          DB_PASSWORD: root

      - name: 📊 Upload Test Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-reports
          path: backend/target/surefire-reports/

  # ============================================
  # 🧪 QA AUTOMATION TESTS - JAVA
  # ============================================
  qa-automation-java:
    name: 🧪 QA Automation Tests (Java)
    runs-on: ubuntu-latest
    needs: [install-qa, backend-tests]
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: maven

      - name: 🌐 Setup Chrome for Selenium
        uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable

      - name: 📦 Install ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: 🧪 Run Java QA Automation Tests
        working-directory: ./qa-automation
        run: |
          echo "🧪 Running Java QA automation tests..."
          mvn clean test -Dtest.env=ci
        env:
          BASE_URL: https://qscfgrt657.duckdns.org

      - name: 📊 Upload Java QA Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: java-qa-reports
          path: |
            qa-automation/target/surefire-reports/
            qa-automation/target/allure-results/
            qa-automation/screenshots/

  # ============================================
  # 🚀 DEPLOY TO SELF-HOSTED
  # ============================================
  deploy-self-hosted:
    name: 🚀 Deploy to Self-Hosted
    runs-on: self-hosted
    needs: [backend-tests, qa-automation-java]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: ☕ Build Backend JAR
        working-directory: ./backend
        run: mvn clean package -DskipTests -q

      - name: 🚀 Deploy Application
        run: |
          mkdir -p /home/denis/apps/bumbac
          cp -f backend/target/*.jar /home/denis/apps/bumbac/app.jar
          
          if [ -f "/home/denis/projects/Bumbac/backend/.env" ]; then
            cp -f /home/denis/projects/Bumbac/backend/.env /home/denis/apps/bumbac/.env
          fi
          
          # Use systemd service instead of nohup
          sudo systemctl restart bumbac-health.service
          
          echo "Waiting for Spring Boot startup..."
          for i in {1..40}; do
            sleep 3
            if curl -s -f http://localhost:8080/actuator/health > /dev/null; then
              echo "✅ Application started successfully!"
              echo "🎉 Deployment completed!"
              exit 0
            fi
            echo "Startup check $i/40..."
          done
          echo "❌ Application failed to start"
          exit 1

  # ============================================
  # 📧 NOTIFICATIONS
  # ============================================
  notify:
    name: 📧 Notify Results
    runs-on: ubuntu-latest
    needs: [deploy-self-hosted]
    if: always()
    steps:
      - name: 📧 Notify Success
        if: needs.deploy-self-hosted.result == 'success'
        run: |
          echo "✅ Deployment successful!"
          echo "🔗 Application: https://qscfgrt657.duckdns.org"
          echo "📚 Swagger: https://qscfgrt657.duckdns.org/swagger-ui/index.html"

      - name: ❌ Notify Failure
        if: needs.deploy-self-hosted.result == 'failure'
        run: |
          echo "❌ Deployment failed!"
          echo "🔍 Check logs for details"
