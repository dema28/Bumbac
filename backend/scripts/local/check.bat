@echo off
setlocal enabledelayedexpansion
title üìä Bumbac Local Environment Status Check

echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë       üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ Bumbac LOCAL –æ–∫—Ä—É–∂–µ–Ω–∏—è            ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù
echo.

REM –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É backend
cd /d "%~dp0\..\..\"


:: –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env.local
for /f "tokens=1,2 delims==" %%a in ('findstr /R "^DB_USERNAME=" .env.local') do set DB_USER=%%b
for /f "tokens=1,2 delims==" %%a in ('findstr /R "^DB_PASSWORD=" .env.local') do set DB_PASSWORD=%%b
for /f "tokens=1,2 delims==" %%a in ('findstr /R "^DB_NAME=" .env.local') do set DB_NAME=%%b

:: 0. –û–ø—Ä–µ–¥–µ–ª—è–µ–º docker compose
set "COMPOSE=docker compose"
%COMPOSE% version >nul 2>&1
if errorlevel 1 set "COMPOSE=docker-compose"

:: 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo [1/6] üìÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ñ–∞–π–ª–æ–≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...
if exist ".env.local" (
    echo    .env.local –Ω–∞–π–¥–µ–Ω
) else (
    echo    ‚ùå .env.local –ù–ï –Ω–∞–π–¥–µ–Ω
)

if exist "docker-compose.local.yml" (
    echo    docker-compose.local.yml –Ω–∞–π–¥–µ–Ω
) else (
    echo    ‚ùå docker-compose.local.yml –ù–ï –Ω–∞–π–¥–µ–Ω
)

:: 2. –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo.
echo [2/6] üê≥ –°—Ç–∞—Ç—É—Å Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤...
%COMPOSE% --env-file .env.local -f docker-compose.local.yml ps

:: 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
echo.
echo [3/6] üóÑÔ∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (MySQL)...
set table_count=0
set user_count=
docker exec bumbac-mysql-local mysql -u %DB_USER% -p"%DB_PASSWORD%" %DB_NAME% -e "SELECT 'MySQL OK';" >nul 2>&1
if %ERRORLEVEL% equ 0 (
    echo    MySQL –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ
    for /f "tokens=*" %%i in ('docker exec bumbac-mysql-local mysql -N -u %DB_USER% -p"%DB_PASSWORD%" -D %DB_NAME% -e "SHOW TABLES;" 2^>nul') do (
        set /a table_count+=1
    )
    for /f %%i in ('docker exec bumbac-mysql-local mysql -N -u %DB_USER% -p"%DB_PASSWORD%" -D %DB_NAME% -e "SELECT COUNT(*) FROM users;" 2^>nul') do set user_count=%%i

    if !table_count! gtr 0 (
        echo    –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü –≤ –ë–î: !table_count!
        if defined user_count echo    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –ë–î: !user_count!
    ) else (
        echo    ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü—ã –≤ –ë–î –Ω–µ –Ω–∞–π–¥–µ–Ω—ã - –≤–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è
    )
) else (
    echo    ‚ùå MySQL –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
)

:: 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend API
echo.
echo [4/6] ‚òï –ü—Ä–æ–≤–µ—Ä–∫–∞ Backend API...
curl -s -o nul -w "Health Check: HTTP %%{http_code}\n" http://127.0.0.1:8080/actuator/health
curl -s -o nul -w "Swagger UI:   HTTP %%{http_code}\n" http://127.0.0.1:8080/swagger-ui/index.html
curl -s -o nul -w "API Info:     HTTP %%{http_code}\n" http://127.0.0.1:8080/actuator/info
curl -s -o nul -w "API Test:     HTTP %%{http_code}\n" http://127.0.0.1:8080/api/yarns

:: 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
echo.
echo [5/6] üåê –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend...
curl -s -o nul -w "Port 3000:    HTTP %%{http_code}\n" http://127.0.0.1:3000
curl -s -o nul -w "Port 5173:    HTTP %%{http_code}\n" http://127.0.0.1:5173

:: 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo.
echo [6/6] üõ†Ô∏è  –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤...
curl -s -o nul -w "PhpMyAdmin:   HTTP %%{http_code}\n" http://127.0.0.1:8081
curl -s -o nul -w "MailHog Web:  HTTP %%{http_code}\n" http://127.0.0.1:8025

:: ================================
:: –°–í–û–î–ö–ê –°–¢–ê–¢–£–°–ê
:: ================================
echo.
echo ‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
echo ‚ïë                 üìä –°–í–û–î–ö–ê –°–¢–ê–¢–£–°–ê                   ‚ïë
echo ‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

REM Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
set docker_ok=0
for %%C in (bumbac-mysql-local bumbac-mailhog-local bumbac-phpmyadmin-local) do (
    docker ps --format "{{.Names}}" | findstr /i "%%C" >nul && set /a docker_ok+=1
)
if !docker_ok! equ 3 (
    echo Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: –í—Å–µ –∑–∞–ø—É—â–µ–Ω—ã
) else (
    echo ‚ùå Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: –ù–µ –≤—Å–µ –∑–∞–ø—É—â–µ–Ω—ã (–∑–∞–ø—É—â–µ–Ω–æ !docker_ok! –∏–∑ 3)
)

REM Backend
curl -s -o nul http://127.0.0.1:8080/actuator/health
if %ERRORLEVEL% equ 0 (
    echo Backend API: –†–∞–±–æ—Ç–∞–µ—Ç
) else (
    echo ‚ùå Backend API: –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç
)

REM Frontend
set frontend_ok=0
curl -s -o nul http://127.0.0.1:3000 && set /a frontend_ok+=1
curl -s -o nul http://127.0.0.1:5173 && set /a frontend_ok+=1

if !frontend_ok! gtr 0 (
    echo Frontend: –†–∞–±–æ—Ç–∞–µ—Ç
) else (
    echo ‚ùå Frontend: –ù–ï —Ä–∞–±–æ—Ç–∞–µ—Ç
)

REM –¢–∞–±–ª–∏—Ü—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≤ –ë–î
if !table_count! gtr 0 (
    echo –¢–∞–±–ª–∏—Ü –≤ –±–∞–∑–µ: !table_count!
    if defined user_count echo –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ: !user_count!
) else (
    echo ‚ö†Ô∏è  –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã
)

echo.
echo üìã –ü–æ–ª–µ–∑–Ω—ã–µ —Å—Å—ã–ª–∫–∏:
echo   Backend API:     http://127.0.0.1:8080
echo   Health Check:    http://127.0.0.1:8080/actuator/health
echo   Swagger UI:      http://127.0.0.1:8080/swagger-ui.html
echo   Frontend:        http://127.0.0.1:3000
echo   PhpMyAdmin:      http://127.0.0.1:8081
echo   MailHog:         http://127.0.0.1:8025
echo.
echo üìÅ –õ–æ–≥–∏ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏:
echo   Backend:         logs\bumbac-local.log
echo   Docker:          %COMPOSE% --env-file .env.local -f docker-compose.local.yml logs
echo.

pause
