package com.bumbac;

import io.github.cdimascio.dotenv.Dotenv;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.boot.autoconfigure.domain.EntityScan; // üëà –¥–æ–±–∞–≤–ª—è–µ–º EntityScan –¥–ª—è —è–≤–Ω–æ–≥–æ —É–∫–∞–∑–∞–Ω–∏—è, –≥–¥–µ –∏—Å–∫–∞—Ç—å @Entity
import org.springframework.context.annotation.ComponentScan;

@SpringBootApplication
@EntityScan(basePackages = {
        "com.bumbac.auth.entity",      // üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏ —Ä–æ–ª–∏
        "com.bumbac.cart.entity",      // üõí –ö–æ—Ä–∑–∏–Ω–∞ –∏ –µ—ë —ç–ª–µ–º–µ–Ω—Ç—ã
        "com.bumbac.catalog.entity",   // üß∂ –ü—Ä—è–∂–∞ –∏ —Ü–≤–µ—Ç–∞ (Color ‚Üí Yarn —Å–≤—è–∑—å!)
        "com.bumbac.order.entity",     // üì¶ –ó–∞–∫–∞–∑—ã, –ø–ª–∞—Ç–µ–∂–∏, –≤–æ–∑–≤—Ä–∞—Ç—ã
        "com.bumbac.catalog.media", // üñºÔ∏è –ú–µ–¥–∏–∞—Ñ–∞–π–ª—ã (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è, –≤–∏–¥–µ–æ –∏ —Ç.–¥.)
        "com.bumbac.catalog.pattern", // üìñ –°—Ö–µ–º—ã –≤—è–∑–∞–Ω–∏—è
        "com.bumbac.user.entity",      // üë§ –ü—Ä–æ—Ñ–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        "com.bumbac.contact.entity", // üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        "com.bumbac.newsletter.entity" // üì∞ –ü–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫–∏
        // üëâ –¥–æ–±–∞–≤–ª—è–π –¥—Ä—É–≥–∏–µ –ø–∞–∫–µ—Ç—ã, –µ—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –º–æ–¥—É–ª–∏ —Å @Entity
})
public class BumbacApplication {
    public static void main(String[] args) {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env, –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        Dotenv dotenv = Dotenv.configure()
                .ignoreIfMissing()   // üìÅ –ù–µ –≤—ã–±—Ä–∞—Å—ã–≤–∞—Ç—å –æ—à–∏–±–∫—É, –µ—Å–ª–∏ .env –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç (–Ω–∞–ø—Ä–∏–º–µ—Ä, –≤ –ø—Ä–æ–¥–µ)
                .load();

        // –ü–µ—Ä–µ–Ω–æ—Å–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env –≤ —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–≤–æ–π—Å—Ç–≤–∞ (Spring –∏—Ö —É–≤–∏–¥–∏—Ç —á–µ—Ä–µ–∑ @Value –∏–ª–∏ –∫–æ–Ω—Ñ–∏–≥)
        dotenv.entries().forEach(entry ->
                System.setProperty(entry.getKey(), entry.getValue())
        );

        // üöÄ –ó–∞–ø—É—Å–∫ Spring Boot –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        SpringApplication.run(BumbacApplication.class, args);
    }
}
