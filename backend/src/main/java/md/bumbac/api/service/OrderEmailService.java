package md.bumbac.api.service;

import jakarta.mail.MessagingException;
import jakarta.mail.internet.MimeMessage;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import md.bumbac.api.model.CartItem;
import md.bumbac.api.model.Order;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.mail.javamail.MimeMessageHelper;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
@Slf4j
public class OrderEmailService {

    private final JavaMailSender mailSender;

    @Value("${warehouse.email:orders@bumbac.md}")
    private String warehouseEmail;

    /** –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ —Å –¥–µ—Ç–∞–ª—è–º–∏ –∑–∞–∫–∞–∑–∞ –Ω–∞ —Å–∫–ª–∞–¥ */
    public void sendOrderToWarehouse(Order order) {
        try {
            MimeMessage message = mailSender.createMimeMessage();
            MimeMessageHelper helper = new MimeMessageHelper(message, true, "UTF-8");

            helper.setTo(warehouseEmail);
            // helper.setBcc("archive@bumbac.md");   // ‚Üê —Ä–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
            helper.setSubject("üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #" + order.getId());

            /* ---------------- HTML-—Ç–µ–ª–æ ---------------- */
            StringBuilder body = new StringBuilder();
            body.append("<h2>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ #").append(order.getId()).append("</h2>");
            body.append("<p><strong>–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</strong> ").append(order.getRecipientName()).append("<br>");
            body.append("<strong>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ:</strong> ").append(order.getContactPerson()).append("<br>");
            body.append("<strong>–¢–µ–ª–µ—Ñ–æ–Ω:</strong> ").append(order.getPhoneNumber()).append("<br>");
            body.append("<strong>Email:</strong> ").append(order.getEmail()).append("<br>");
            body.append("<strong>–ê–¥—Ä–µ—Å:</strong> ")
                    .append(order.getCountry()).append(", ")
                    .append(order.getRegion()).append(", ")
                    .append(order.getCity()).append(", ")
                    .append(order.getStreet()).append(", ")
                    .append(order.getBuildingNumber()).append(", ")
                    .append(order.getPostalCode()).append("</p>");

            body.append("<h3>–¢–æ–≤–∞—Ä—ã:</h3><ul>");
            for (CartItem item : order.getItems()) {
                body.append("<li>")
                        .append(item.getProduct().getName())
                        .append(" √ó ").append(item.getQuantity())
                        .append("</li>");
            }
            body.append("</ul>");

            body.append("<p><strong>–û–±—â–∞—è —Å—É–º–º–∞:</strong> ")
                    .append(order.getTotal()).append(" MDL</p>");

            helper.setText(body.toString(), true);   // true ‚Üí HTML

            mailSender.send(message);
            log.info("–ü–∏—Å—å–º–æ –æ –∑–∞–∫–∞–∑–µ #{} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ —Å–∫–ª–∞–¥ {}", order.getId(), warehouseEmail);

        } catch (MessagingException e) {
            log.error("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ –æ –∑–∞–∫–∞–∑–µ #{}", order.getId(), e);
        }
    }
}
